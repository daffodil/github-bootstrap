#!/bin/bash

# Get user/pass from command line; if not, prompt
if [ $# -eq 2 ]; then
    GH_USERNAME="$1"
    GH_PASSWORD="$2"
elif [ "$1" == "--help" ]; then
    echo "Sets up Git with your existing Github account, creating and adding private keys as necessary."
    echo "Prompts for two-factor authentication code if enabled."
    echo "$0 github-username github-password"
    exit
fi
if [ -z "$GH_USERNAME" ]; then
  read -p "Github username: " GH_USERNAME
fi
if [ -z "$GH_PASSWORD" ]; then
  read -s -p "Github password: " GH_PASSWORD
fi
# Pull the user record from Github
GITHUB_USER_DATA="/tmp/$GH_USERNAME-github-api-v3-info"
curl -G "https://api.github.com/users/$GH_USERNAME" > $GITHUB_USER_DATA
# Parse it

# Get email address from Github; if not, prompt
GH_EMAIL=`cat $GITHUB_USER_DATA | grep '"email":' | awk -F":" '{ print $2 }' | sed -e 's/^[ \t]*//' | awk -F\" '{ print $2 }'`
if [ -z "$GH_EMAIL" ]; then
  read -p "Github email: " GH_EMAIL
fi

# Get name from Github; if not, prompt
GH_NAME=`cat $GITHUB_USER_DATA | grep -v "\"name\": \"free\"" | grep '"name":' | tail -1 | awk -F":" '{ print $2 }' | sed -e 's/^[ \t]*//' | awk -F\" '{ print $2 }'`
if [ -z "$GH_NAME" ]; then
  read -p "Your name: " GH_NAME
fi

# Figure out home diretory. Don't trust ~ because this might be sudone
CURRENT_USER=`whoami`
HOME=`awk -F: -v v="$CURRENT_USER" '{if ($1==v) print $6}' /etc/passwd`

# Generate keys if necessary
if [ ! -f ~/.ssh/id_rsa.pub ]; then
    echo generating key
    ssh-keygen -t rsa -C "$GH_EMAIL" -N "" -f ~/.ssh/id_rsa
    # No reason this should be necessary, but sometimes it's needed. Go figure.
    ssh-add ~/.ssh/id_rsa
fi

# Check for two-factor auth
GITHUB_USER_SERVER_RESPONSE="/tmp/$GH_USERNAME-github-api-v3-response"
curl -u "$GH_USERNAME:$GH_PASSWORD" -D $GITHUB_USER_SERVER_RESPONSE  https://api.github.com/user/keys
TFA_HEADER=""
if grep "X-GitHub-OTP: required; app" $GITHUB_USER_SERVER_RESPONSE 
then  
  echo GitHub two-factor authentication required
  read -p "Enter the code from your authenticator app: " TFA_CODE
  TFA_HEADER="X-GitHub-OTP: $TFA_CODE"
elif grep "X-GitHub-OTP: required; sms" $GITHUB_USER_SERVER_RESPONSE 
then  
  echo GitHub two-factor authentication required
  echo Sms authentication is not currently supported
  #read -p "Enter the code received via sms: " TFA_CODE
  #TFA_HEADER="X-GitHub-OTP: $TFA_CODE"
fi
rm $GITHUB_USER_SERVER_RESPONSE

# Upload public key to github
# Using the API
curl -u "$GH_USERNAME:$GH_PASSWORD" -H "$TFA_HEADER" -d "{\"title\":\"`whoami`@`hostname`.`date +%Y-%m-%d`\",\"key\":\"`cat ~/.ssh/id_rsa.pub`\"}" https://api.github.com/user/keys
rm $GITHUB_USER_DATA

# Summarize
echo -n "Name: "
echo $GH_NAME
git config --global user.name "$GH_NAME"
echo -n "Email: "
echo $GH_EMAIL
git config --global user.email "$GH_EMAIL"
echo -n "Username: "
echo $GH_USERNAME
git config --global github.user $GH_USERNAME

# Test the connection
ssh -o StrictHostKeyChecking=no -T git@github.com

# WIN
